---
  - name: install packages
    include: install_packages.yml

  - name: "Find out if PostgreSQL is initialized"
    stat:
      path: "{{ pg_conf }}"
    register: postgres_data
    

  - name: "Initialize PostgreSQL"
    shell: "postgresql-13-setup initdb"
    when: not postgres_data.stat.exists
          

  - name: "Start and enable services"
    service: "name={{ item }} state=started enabled=yes"
    with_items:
      - postgresql-13


  - name: "Create app database"
    postgresql_db:
      state: present
      name: "{{ db_name }}"
    become: yes
    become_user: postgres

  - name: create table 1
    postgresql_table:
      db: "{{ db_name }}"
      name: table1_psql1
      columns: 
        - id serial
        - name text
        - price decimal
    become_user: postgres
    tags: db

  - name: create table 2
    postgresql_table: 
      db: "{{ db_name }}"
      name: table2_psql2
      columns: 
        - id serial
        - name text
        - price decimal
    become_user: postgres
    tags: db

# publications
  - name: create publications
    include: create_publications.yml
    tags: db

  - name: add conn enable via string
    blockinfile:
      path: "{{ pg_conf }}"
      block: |
       host    {{ db_name }}            {{ db_user }}      {{ loc_net }}       md5
       host    replication            {{ db_user }}      {{ loc_net }}       md5

      state: present
    tags: db, sub, repl

  - name: add conn enable via string
    lineinfile:
      path: "{{ postgres_conf }}"
      line: "wal_level = logical"
      state: present
    tags: 
       - db
        
  - name: add conn enable via string
    lineinfile:
      path: "{{ postgres_conf }}"
      line: "listen_addresses = 'localhost, {{ ansible_eth1.ipv4.address }}'"
      state: present
    tags: db, sub, repl
        
  - name: change postgres pwd
    postgresql_user: 
      name: postgres
      password: "{{ db_password }}"
    become_user: postgres
    tags: db

  - name: restart postgres
    service:
      name: postgresql-13
      state: restarted
    tags: db, sub, repl
  # subscibtions    
  # - name: create subscribtions 
  #   include: subscribe.yml
  #   tags: db, sub, sub3

  - name: creage pgpass
    lineinfile:
      line: "192.168.50.30:5432:{{ db_name }}:{{ db_user }}:{{ db_password }}"
      path: ~/.pgpass
      state: present
      mode: 0600
      create: yes
    become_user: postgres
    tags: db, sub, repl
    when: (ansible_hostname == 'psql4')

  - name: configure mod replica host3 
    replace:
      path: "{{ postgres_conf }}"
      regexp: "wal_level = logical"
      replace: "wal_level = replica"
    tags: repl
    when: ansible_hostname == 'psql3'
    notify: restart postgres

  - name: stop pgsql psql4
    service:
      name: postgresql-13
      state: stopped
    become: yes
    when: (ansible_hostname == 'psql4')
    
    
  - name: create replication on psql4
    shell: "PGPASSWORD={{ db_password }} pg_basebackup -h 192.168.50.30 -p 5432  -P -w -v -R -X stream -C -S pgstandby -D /var/lib/pgsql/13/data"
    tags: db, sub, repl
    become_user: postgres
    become: yes
    when: (ansible_hostname == 'psql4')
    notify: start postgres
