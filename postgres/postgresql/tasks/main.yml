---
  - name: install epel
    yum: 
      name: 
        - epel-release
      state: present

  - name: install scripts    
    yum: 
      name: 
#        - python-pip
        - dnf
        - python
        - python-psycopg2
        - wget
      state: latest
      update_cache: true
    tags: first_run

#  - name: install pg_pyth_libarys
#    pip:
#      name: - pip
#            - setuptools
#      extra_args: --upgrade
      
  - name: install postgres
    dnf:
      name: 
        - postgresql
        - postgresql-server
      state: present
    notify: start postgres

  - name: "Find out if PostgreSQL is initialized"
    stat:
      path: "/var/lib/pgsql/data/pg_hba.conf"
    register: postgres_data

  - name: "Initialize PostgreSQL"
    shell: "postgresql-setup initdb"
    when: not postgres_data.stat.exists

  - name: "Start and enable services"
    service: "name={{ item }} state=started enabled=yes"
    with_items:
      - postgresql


  - name: "Create app database"
    postgresql_db:
      state: present
      name: "{{ db_name }}"
    become: yes
    become_user: postgres

  - name: "Create db user"
    postgresql_user:
      state: present
      name: "{{ db_user }}"
      password: "{{ db_password }}"
    become: yes
    become_user: postgres

  - name: "Grant db user access to app db"
    postgresql_privs:
      type: database
      database: "{{ db_name }}"
      roles: "{{ db_user }}"
      grant_option: no
      privs: all
    become: yes
    become_user: postgres

#  - name: "Allow md5 connection for the db user"
#    postgresql_pg_hba:
#      dest: "~/data/pg_hba.conf"
#      contype: host
#      databases: all
#      method: md5
#      users: "{{ db_user }}"
#      create: true
#    become: yes
#    become_user: postgres
#    notify: restart postgres
