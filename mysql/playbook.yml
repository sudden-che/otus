---
- hosts: all
  become: true
  gather_facts: false
  vars:
    perc_repo: "https://repo.percona.com/yum/percona-release-latest.noarch.rpm"
    mysql_pass: Ctrhtnysqgfhjkm1! #Секретныйпароль1!
    mysql_user: root
    mysql_db_name: bet

  tasks:
  - name: install percona remote rpm
    yum:
      name: "{{ perc_repo }}"
      state: present

  - name: install packages
    yum: 
      name: 
        - epel-release
        - Percona-Server-server-57
        - dnf
        #- python3-PyMySQ
      state: present
    #tags: mysql

  - name: install mysql_module_py
    dnf:
      name: python2-PyMySQL
      state: present
    #tags: mysql
     
  - name: copy base-conf
    template:
      src: templates/01-base.cnf.j2
      dest: /etc/my.cnf.d/01-base.cnf
      owner: "mysql"
      mode: 0655
      force: yes

  - name: copy mysql conf
    copy:
      src: "{{ item }}"
      dest: "/etc/my.cnf.d/"
      owner: "mysql"
      mode: 0655
    with_fileglob:
      - "conf/conf.d/*"

  - name: Ensure MySQL is up-and-running
    service:
      name: mysql
      state: restarted
      enabled: yes
    tags: mysql
    # setpwd once
  - shell: cat /var/log/mysqld.log | grep "temporary password" | grep -oE '[^ ]+$'
    register: tmp_root_password
    tags: 
      - mysql
      - setpwd

  - name: Set new password from temporary password ignoring errors
    shell: 'mysql -e "SET PASSWORD = PASSWORD(''{{ mysql_pass }}'');" --connect-expired-password -uroot -p"{{ tmp_root_password.stdout }}" || /bin/true'
    tags: 
      - mysql
      - setpwd
# } end



  - name: start and enable services
    service:
      name: chronyd
      state: restarted
      enabled: yes



  - name: copy login/pwd
    copy:
      src: "templates/.my.cnf"
      dest: "/root/.my.cnf"
      owner: root
    tags: login

  - name: first start MySQL is up-and-running
    service:
      name: mysql
      state: started
      enabled: yes
    tags: mysql

 # - name: include mysql conf provision
 #   import: mysql-conf.yml


 

- hosts: mysql1
  become: true
  gather_facts: false
  vars:
    mysql_pass: Ctrhtnysqgfhjkm1! #Секретныйпароль1!
    mysql_user: root
    mysql_db_name: bet
  tasks:


  - name: user otus add
    mysql_user:
      name: "repl"
      password: "!OtusLinux2018"
      state: present
      host: '%'
      login_user: root
      login_unix_socket: "/var/lib/mysql/mysql.sock"
      priv: "*.*:REPLICATION SLAVE"



  - name: create db
    mysql_db:
      name: "{{ mysql_db_name }}"
      state: present
      login_user: root
      login_unix_socket: "/var/lib/mysql/mysql.sock"
    tags: login



  - name: copy dump
    copy:
      src: dump.sql
      dest: /tmp/dump.sql

  - name: Restore database
    mysql_db:
      name:  "{{ mysql_db_name }}"
      state: import
      target: "/tmp/dump.sql"
      login_user: root
      login_unix_socket: "/var/lib/mysql/mysql.sock"
    
  - name: dump master db
    mysql_db:
      name: all
      state: dump
      target: /tmp/dump_m.sql
      login_user: root
      login_unix_socket: "/var/lib/mysql/mysql.sock"
      ignore_tables: "bet.events_on_demand,bet.v_same_event"

  - name: copy dump to asnible machine
    fetch:
      src: /tmp/dump_m.sql
      dest: dump_m.sql
      flat: yes
#slave
- hosts: mysqlslave
  become: true
  gather_facts: false
  vars:
    mysql_pass: Ctrhtnysqgfhjkm1! #Секретныйпароль1!
    mysql_user: root
    mysql_db_name: bet
    
  tasks:


  

  - name: enable ssh pwd login
    replace:
      dest: "/etc/ssh/sshd_config"
      regexp: 'PasswordAuthentication no'
      replace: 'PasswordAuthentication yes'
   
  - name: restart sshd
    service:
      name: sshd
      state: restarted
      
  - name: uncomment slave conf
    replace:
      dest: "/etc/my.cnf.d/05-binlog.cnf"
      regexp: '#replicate'
      replace: 'replicate'

  - name: Ensure MySQL is up-and-running
    service:
      name: mysql
      state: started
      enabled: yes
    tags: mysql
  
  - name: copy dump
    copy:
      src: dump_m.sql
      dest: /tmp/dump_m.sql

  - name: Restore db from master dump 
    mysql_db:
      name:  "{{ mysql_db_name }}"
      state: import
      target: /tmp/dump_m.sql
      login_user: root
      login_unix_socket: "/var/lib/mysql/mysql.sock"
  
      
      
  - name: config
    mysql_replication:
      mode: changemaster
      master_host: "192.168.50.10"
      master_port: 3306
      master_user: repl
      master_password: "!OtusLinux2018"
      master_auto_position: 1
      login_user: root
      login_unix_socket: "/var/lib/mysql/mysql.sock"
    tags: slave

  - name: start S L A V E
    mysql_replication: 
      mode: startslave
      login_user: root
      login_unix_socket: "/var/lib/mysql/mysql.sock"
    tags: slave

  



