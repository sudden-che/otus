---
# tasks file for gateway
  - name: install epel
    yum:
      name:
        - epel-release
      state: present
      update_cache: true

  - name: install soft
    yum:
      name: 
        - vim
        - mtr
        - tcpdump
        - net-tools
        - nginx
        - python-cryptography
      state: present
      update_cache: true

  - name: set up forward 
    sysctl:
      name: net.ipv4.conf.all.forwarding
      value: '1'
      state: present

  - name: create tmp nginx dir
    file:
      state: directory
      dest: "{{ item }}"
      owner: nginx
      group: nginx
    with_items:
     - "/tmp/cache"
     - "{{ ssl_path }}"


  - name: copy nginx conf
    template:
      src: templates/nginx.conf.j2
      dest: /etc/nginx/nginx.conf
    tags: nginx

# open ssl
  - name: Create simple self-signed certificate
    openssl_privatekey:
      path:  "{{ ssl_path }}{{ ssl_name }}.pem"
    tags: ssl

  - name: Generate an OpenSSL Certificate Signing Request
    openssl_csr:
      path: "{{ ssl_path }}{{ ssl_name }}.csr"
      privatekey_path:  "{{ ssl_path }}{{ ssl_name }}.pem"
      common_name: "{{ ssl_name }}"
    tags: ssl
    
  - name: Generate a Self Signed OpenSSL certificate
    openssl_certificate:
      path: "{{ ssl_path }}{{ ssl_name }}.crt"
      privatekey_path: "{{ ssl_path }}{{ ssl_name }}.pem"
      csr_path: "{{ ssl_path }}{{ ssl_name }}.csr"
      provider: selfsigned
    tags: ssl


  - name: restarting services 
    service:
      name: "{{ item }}"
      enabled: yes
      state: restarted
    with_items: 
      - firewalld
      - nginx
    tags: nginx

  - name: enabling masquerade
    firewalld:
      masquerade: yes
      state: enabled
      permanent: yes
      immediate: yes

  - name: enabling http
    firewalld:
      service: http
      state: enabled
      permanent: yes
      immediate: yes  
    tags: fw
    
  - name: enabling https
    firewalld:
      service: https
      state: enabled
      permanent: yes
      immediate: yes 
    tags: fw 




  # - name: dst-nat ssl to {{ssl_name}}
  #   firewalld:
  #     rich_rule: 'rule family=ipv4 forward-port port=443 protocol=tcp to-port=443 to-addr=192.168.50.20'
  #     permanent: yes
  #     state: enabled
  #     immediate: yes
