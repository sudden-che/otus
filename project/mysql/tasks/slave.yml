  - name: SLAVE enable ssh pwd login
    replace:
      dest: "/etc/ssh/sshd_config"
      regexp: 'PasswordAuthentication no'
      replace: 'PasswordAuthentication yes'
    tags: ssh

  - name: disable host key checking
    replace:
      dest: "/etc/ssh/ssh_config"
      regexp: '#   StrictHostKeyChecking ask'
      replace: 'StrictHostKeyChecking no'
    tags: ssh

  - name: SLAVE restart sshd
    service:
      name:  sshd
      state: restarted
    tags: ssh
     
  - name: SLAVE Ensure MySQL is up-and-running
    service:
      name:  mysql
      state: started
      enabled: yes
    tags: mysql
  
  - name: SLAVE copy dump
    copy:
      src: dump_m.sql
      dest: /tmp/dump_m.sql
    tags: slave

  - name: SLAVE stop slave if started
    mysql_replication: 
      mode: stopslave
      login_user: root
      login_unix_socket: "/var/lib/mysql/mysql.sock"
    tags: slave

  - name: SLAVE config
    mysql_replication:
      mode: changemaster
      master_host: "{{ wp_db_host }}"
      master_port: "{{ mysql_port }}"
      master_user: repl
      master_password: "{{ repl_user_pwd }}"
      master_auto_position: 1
      login_user: root
      login_unix_socket: "/var/lib/mysql/mysql.sock"
    tags: slave

  - name: SLAVE CONF restore db
    include: restore_dump.yml
    tags: slave

  - name: SLAVE start S L A V E
    mysql_replication: 
      mode: startslave
      login_user: root
      login_unix_socket: "/var/lib/mysql/mysql.sock"
    tags: slave

  - name: mysql_bak
    include: mysql_bak.yml
    tags: bak

  - name: Creates a cron bak job  under /etc/cron.d
    ansible.builtin.cron:
      name: xtrabackup
      hour: "23"
      user: root
      job: "
rm -fR {{ mysql_local_bak }}/* && xtrabackup --user={{mysql_user}} --password={{mysql_pass}} --databases={{ wp_db_name }} --backup --force-non-empty-directories --target-dir={{ mysql_local_bak }}"
      cron_file: xtrabackup
    tags: bak, wp

  - name: manual {{ wp_db_name }} on slave
    shell: "rm -fR {{ mysql_local_bak }}/* && xtrabackup --user={{mysql_user}} --password={{mysql_pass}} --databases={{ wp_db_name }} --backup --force-non-empty-directories --target-dir={{ mysql_local_bak }}"
    tags: wp,bak

  - name: MASTER CONF user zabbix-serv add
    mysql_user:
      name: "{{ mysql_user_zab }}"
      password: "{{ mysql_password_zab }}"
      state: present
      host: '%'
      login_user: root
      login_unix_socket: "/var/lib/mysql/mysql.sock"
      priv: "*.*:ALL"
    tags: monitoring